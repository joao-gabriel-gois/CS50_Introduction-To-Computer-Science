#!/usr/bin/env bash

<<comment
  @Author: JoÃ£o Gabriel Souza Gois
  @Description:
    - It compiles based on source code filename informed as first argument of the script,
    ensures it will use cs50 lib in the process, then execute it and finally, after execution,
    it removes the (executable) binary.
  @Details:
    - It handles 2 different executable calls, with or without arguments. 
comment

# To avoid keyboard interrupt to stop whole script
trap '' INT

_dirname="$(pwd)"
filename=$1
args=""

# Filling args if any
for arg in "$@"; do
  if [[ $arg != $1 ]]; then
    args="${args} $arg";
  fi
done

compile() (
  # Compile process need to have the power to 
  # Interrupt script in case of any errors
  trap - INT
  
  source_file="$_dirname/$filename"
  gcc $source_file -o .binary -lm -lcs50
)

run() (
  # Once C binary is finally running, you can interrupt
  trap - INT

  if [[ $args == "" ]]; then
    $_dirname/.binary
  else
    $_dirname/.binary $args
  fi
)

compile
run

# So now, even interrupting run command above following
# code will run anyway, and remove binary if it exists
ls $_dirname/.binary > /dev/null 2> /dev/null

if [[ $? == 0 ]]; then
  rm $_dirname/.binary
fi
